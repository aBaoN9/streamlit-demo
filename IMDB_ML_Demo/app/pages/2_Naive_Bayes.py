# --- fix import path ---
import sys, os
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..', '..')))
# ---------------------------------

import streamlit as st
import pandas as pd
import plotly.express as px
from src.predict_nb import predict_text, load_model

# --- th√™m th∆∞ vi·ªán d·ªãch ---
from googletrans import Translator

st.title("üé≠ Ph√¢n lo·∫°i Th·ªÉ lo·∫°i (Naive Bayes)")
st.caption("M√¥ t·∫£ phim c√≥ th·ªÉ vi·∫øt b·∫±ng ti·∫øng Vi·ªát ho·∫∑c ti·∫øng Anh. ·ª®ng d·ª•ng s·∫Ω t·ª± d·ªãch sang ti·∫øng Anh tr∆∞·ªõc khi ph√¢n lo·∫°i.")

# Nh·∫≠p n·ªôi dung phim
text = st.text_area(
    "Nh·∫≠p m√¥ t·∫£ phim:",
    "M·ªôt s√°t th·ªß ƒë√£ ngh·ªâ h∆∞u tr·ªü l·∫°i con ƒë∆∞·ªùng b√°o th√π sau khi gia ƒë√¨nh anh b·ªã h·∫°i..."
)

# N√∫t d·ª± ƒëo√°n
if st.button("Ph√¢n lo·∫°i"):
    translator = Translator()
    try:
        # --- D·ªãch sang ti·∫øng Anh ---
        translation = translator.translate(text, src='auto', dest='en')
        text_en = translation.text
        st.write("**üìò B·∫£n d·ªãch sang ti·∫øng Anh:**")
        st.info(text_en)

        # --- D·ª± ƒëo√°n b·∫±ng Naive Bayes ---
        label = predict_text(text_en)
        st.success(f"üéØ Th·ªÉ lo·∫°i d·ª± ƒëo√°n: **{label}**")

        # --- Hi·ªÉn th·ªã x√°c su·∫•t (Top 5 th·ªÉ lo·∫°i) ---
        nb_model = load_model()
        proba = nb_model.predict_proba(pd.Series([text_en]))[0]
        classes = nb_model.classes_

        top_idx = proba.argsort()[::-1][:5]
        df_proba = pd.DataFrame({
            "Genre": classes[top_idx],
            "Probability": proba[top_idx]
        })

        st.plotly_chart(
            px.bar(df_proba, x="Probability", y="Genre", orientation="h",
                   title="Top 5 th·ªÉ lo·∫°i c√≥ x√°c su·∫•t cao nh·∫•t", text_auto=".2f"),
            use_container_width=True
        )

    except Exception as e:
        st.error(f"L·ªói khi d·ªãch ho·∫∑c ph√¢n lo·∫°i: {e}")
