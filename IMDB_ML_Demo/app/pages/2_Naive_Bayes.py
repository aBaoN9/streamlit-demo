# --- fix import path ---
import sys, os
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '..', '..')))

import streamlit as st
import pandas as pd
import plotly.express as px
from src.predict_nb import predict_text, load_model

# ‚úÖ d√πng deep-translator, t∆∞∆°ng th√≠ch Py 3.13
from deep_translator import GoogleTranslator

def translate_to_en(text: str) -> str:
    try:
        return GoogleTranslator(source='auto', target='en').translate(text)
    except Exception:
        # n·∫øu l·ªói m·∫°ng, fallback d√πng nguy√™n vƒÉn
        return text

st.title("üé≠ Ph√¢n lo·∫°i Th·ªÉ lo·∫°i (Naive Bayes)")
st.caption("B·∫°n c√≥ th·ªÉ nh·∫≠p m√¥ t·∫£ b·∫±ng ti·∫øng Vi·ªát; h·ªá th·ªëng s·∫Ω d·ªãch sang ti·∫øng Anh r·ªìi ph√¢n lo·∫°i.")

text = st.text_area(
    "Nh·∫≠p m√¥ t·∫£ phim:",
    "M·ªôt s√°t th·ªß ƒë√£ ngh·ªâ h∆∞u tr·ªü l·∫°i con ƒë∆∞·ªùng b√°o th√π sau khi gia ƒë√¨nh anh b·ªã h·∫°i..."
)

if st.button("Ph√¢n lo·∫°i"):
    text_en = translate_to_en(text)
    st.write("**üìò B·∫£n d·ªãch sang ti·∫øng Anh:**")
    st.info(text_en)

    label = predict_text(text_en)
    st.success(f"üéØ Th·ªÉ lo·∫°i d·ª± ƒëo√°n: **{label}**")

    # X√°c su·∫•t top-5
    nb_model = load_model()
    proba = nb_model.predict_proba(pd.Series([text_en]))[0]
    classes = nb_model.classes_
    top = proba.argsort()[::-1][:5]
    import plotly.express as px
    dfp = pd.DataFrame({"Genre": classes[top], "Probability": proba[top]})
    st.plotly_chart(
        px.bar(dfp, x="Probability", y="Genre", orientation="h", title="Top-5 x√°c su·∫•t"),
        use_container_width=True
    )
